$enable-hover-media-query: true;
// Text truncate
// Requires inline-block or block for proper styling
@mixin text-truncate() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin breakpoint($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media (min-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    } // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "+"Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

/// Mixin to manage responsive font sizes
@mixin font-size($size) {
    // If the key exists in the map
    @if map-has-key($font-sizes-medium, $size) {
        // Prints a media query based on the value
        font-size: map-get($font-sizes-medium, $size);
    } // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$font-sizes-base}`. "+"Available breakpoints are: #{map-keys($font-sizes-base)}.";
    }
}

@mixin responsive-font-size($size) {
    // If the key exists in the map
    @if map-has-key($font-sizes-base, $size) {
        // Prints a media query based on the value
        font-size: map-get($font-sizes-base, $size);
        line-height: $line-height-base;

        @if map-has-key($font-sizes-medium, $size) {
            @include breakpoint(medium){
                font-size: map-get($font-sizes-medium, $size);
            }
        }

        @if map-has-key($font-sizes-large, $size) {
            @include breakpoint(large){
                font-size: map-get($font-sizes-large, $size);
            }
        }

    } // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$font-sizes-base}`. "+"Available breakpoints are: #{map-keys($font-sizes-base)}.";
    }
}

// stylelint-disable indentation
@mixin hover {
    &:hover {
        @content;
    } //  }
}

@mixin hover-focus {
    @if $enable-hover-media-query {
        &:focus {
            @content;
        }
        @include hover {
            @content;
        }
    }
    @else {
        &:focus,
        &:hover {
            @content;
        }
    }
}

@mixin plain-hover-focus {
    @if $enable-hover-media-query {
        &,
        &:focus {
            @content;
        }
        @include hover {
            @content;
        }
    }
    @else {
        &,
        &:focus,
        &:hover {
            @content;
        }
    }
}

@mixin hover-focus-active {
    @if $enable-hover-media-query {
        &:focus,
        &:active {
            @content;
        }
        @include hover {
            @content;
        }
    }
    @else {
        &:focus,
        &:active,
        &:hover {
            @content;
        }
    }
}